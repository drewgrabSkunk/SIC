345	0.959962094
346	0.960246387
347	0.960483298
348	0.960814973
349	0.961051883
350	0.96119403
351	0.961430941
352	0.961762615
353	0.96209429
354	0.962568112
355	0.962710258
356	0.962852405
357	0.962994551
358	0.963373608
359	0.963468372
360	0.963800047
361	0.963894812
362	0.964179104
363	0.964321251
364	0.964700308
365	0.964984601
366	0.965221511
367	0.965363658
368	0.965553186
369	0.965884861
370	0.966121772
371	0.966406065
372	0.966642976
373	0.966974651
374	0.967211561
375	0.967258943
376	0.96740109
377	0.967448472
378	0.967685383
379	0.967922293
380	0.967969675
381	0.968159204
382	0.968348733
383	0.968680407
384	0.968917318
385	0.969106847
386	0.969343757
387	0.969722814
388	0.970007107
389	0.970244018
390	0.970386164
391	0.970575693
392	0.970812604
393	0.971049514
394	0.971428571
395	0.971665482
396	0.971760246
397	0.971902393
398	0.972139303
399	0.972613125
400	0.972850036
401	0.973039564
402	0.97318171
403	0.973323857
404	0.973513385
405	0.97360815
406	0.973655532
407	0.973939825
408	0.97450841
409	0.974840085
410	0.974982232
411	0.975313907
412	0.975503435
413	0.975692964
414	0.975929874
415	0.976119403
416	0.976214167
417	0.976308932
418	0.976545842
419	0.976687989
420	0.976877517
421	0.977256574
422	0.977635631
423	0.97782516
424	0.977872542
425	0.977919924
426	0.978062071
427	0.978346363
428	0.978441128
429	0.978535892
430	0.978630656
431	0.978725421
432	0.978867567
433	0.979104478
434	0.979246624
435	0.979483535
436	0.979720445
437	0.97981521
439	0.979957356
440	0.980099502
442	0.980336413
443	0.980668088
444	0.980904999
445	0.981094527
446	0.981189292
447	0.981236674
448	0.981284056
449	0.981331438
450	0.981426202
451	0.981615731
452	0.981710495
454	0.981805259
455	0.98204217
456	0.982231699
459	0.982373845
460	0.982515991
461	0.982610756
462	0.98270552
463	0.982847666
464	0.982895049
466	0.982989813
467	0.983179341
468	0.983274106
469	0.983416252
470	0.983605781
471	0.983653163
472	0.983747927
473	0.983795309
474	0.983890073
475	0.98403222
476	0.984126984
477	0.984269131
479	0.984363895
480	0.984458659
481	0.984506041
482	0.984553423
483	0.984648188
484	0.984742952
485	0.984837716
486	0.985027245
487	0.985122009
488	0.985311538
489	0.985453684
491	0.98559583
492	0.985690595
493	0.985785359
494	0.985832741
496	0.985880123
497	0.98602227
498	0.986117034
499	0.98625918
500	0.986306562
501	0.986401327
502	0.986496091
503	0.986543473
504	0.98668562
506	0.986780384
507	0.986827766
508	0.986875148
511	0.98692253
513	0.986969912
514	0.987064677
515	0.987159441
516	0.987396352
517	0.987538498
518	0.98758588
519	0.987680644
520	0.987775409
521	0.987822791
522	0.987870173
523	0.987964937
524	0.988059701
525	0.988107084
526	0.988154466
527	0.988201848
528	0.988343994
529	0.988486141
531	0.988580905
532	0.988628287
533	0.988675669
536	0.988723051
538	0.988770434
539	0.988817816
540	0.98891258
541	0.989007344
543	0.989054726
544	0.989149491
545	0.989196873
546	0.989291637
550	0.989386401
551	0.989433783
553	0.989528548
554	0.98957593
555	0.989670694
556	0.989718076
557	0.989812841
558	0.989907605
561	0.990002369
562	0.990097133
563	0.990144516
568	0.990191898
569	0.990334044
570	0.99047619
571	0.990570955
572	0.990713101
573	0.99090263
574	0.991092158
575	0.991234305
576	0.991281687
580	0.991329069
581	0.991376451
582	0.991423833
583	0.991518597
585	0.991613362
586	0.991708126
587	0.991755508
589	0.991850272
590	0.991945037
591	0.992039801
592	0.992134565
593	0.99222933
594	0.992276712
597	0.992371476
602	0.992418858
603	0.992513622
604	0.992608387
605	0.992655769
606	0.992703151
610	0.992750533
611	0.992845297
612	0.992940062
613	0.993034826
614	0.993082208
615	0.993224354
616	0.993319119
617	0.993366501
619	0.993413883
620	0.993461265
623	0.993508647
624	0.993556029
625	0.993603412
627	0.993698176
628	0.99379294
630	0.993887704
632	0.993935086
633	0.993982469
638	0.994029851
641	0.994077233
642	0.994171997
643	0.994219379
644	0.994266761
645	0.994314144
647	0.994361526
648	0.994408908
649	0.99445629
659	0.994503672
662	0.994551054
663	0.994645819
664	0.994693201
666	0.994740583
667	0.994835347
668	0.994930111
670	0.995024876
671	0.99511964
673	0.995214404
675	0.995261786
676	0.995309168
677	0.995356551
681	0.995403933
682	0.995498697
683	0.995546079
692	0.995593461
693	0.995640843
696	0.995688226
697	0.995735608
700	0.99578299
701	0.995830372
702	0.995877754
705	0.995925136
706	0.995972518
707	0.9960199
708	0.996067283
709	0.996114665
713	0.996162047
715	0.996209429
728	0.996256811
736	0.996304193
737	0.996351575
738	0.996398958
739	0.99644634
740	0.996493722
742	0.996541104
750	0.996588486
751	0.99668325
752	0.996730633
756	0.996778015
757	0.996872779
766	0.996920161
769	0.996967543
771	0.997014925
772	0.997062308
773	0.99710969
774	0.997157072
775	0.997204454
776	0.997251836
777	0.997299218
778	0.9973466
796	0.997393982
797	0.997441365
804	0.997488747
809	0.997536129
812	0.997583511
813	0.997630893
814	0.997678275
816	0.997725657
829	0.99777304
834	0.997867804
835	0.997915186
842	0.997962568
843	0.99800995
846	0.998057332
847	0.998104715
848	0.998152097
856	0.998199479
857	0.998246861
866	0.998294243
867	0.998341625
893	0.998389007
897	0.998483772
898	0.998531154
921	0.998578536
922	0.998625918
925	0.9986733
929	0.998720682
930	0.998768064
938	0.998815447
944	0.998910211
945	0.998957593
946	0.999004975
955	0.999052357
956	0.999147122
957	0.999194504
981	0.999241886
994	0.999289268
999	0.99933665
1012	0.999384032
1015	0.999431414
1017	0.999478796
1019	0.999526179
1020	0.999573561
1040	0.999620943
1076	0.999668325
1086	0.999715707
1087	0.999763089
1153	0.999810471
1154	0.999857854
1155	0.999905236
1235	0.999952618
1293	1
latency.dist <- read.csv("//fileserver/Company/DA&DS/R Information/Drew R Playground/latency.dist.csv")
View(latency.dist)
resource.pool <- 1000000
gain.rate <- 1.057
job.resource.matrix <- matrix(nrow=3300, ncol=3, dimnames = c("state.index", "jobs", "resources.allocated", "latency"))
jobs.online <- 0
jobs.resources <- 0
jobs.skipped <- 0
resources.unused <- resource.pool
jobs.total <- 0
job.resource.matrix <- matrix(nrow=3300, ncol=3, dimnames = c("state.index", "jobs", "resources.allocated", "latency"))
job.resource.matrix <- matrix(nrow=3300, ncol=3, dimnames = list("state.index", "jobs", "resources.allocated", "latency"))
job.resource.matrix <- matrix(nrow=3300, ncol=4, dimnames = list("state.index", "jobs", "resources.allocated", "latency"))
?matrix
job.resource.matrix <- matrix(nrow=3300, ncol=3)
job.resource.matrix <- matrix(nrow=3300, ncol=4)
colnames(job.resource.matrix) <- c("state.index", "jobs", "resources.allocated", "latency")
head(job.resource.matrix)
job.resource.matrix["jobs"]
job.resource.matrix[,"jobs"]
jobs.current <- 0
resource.fun <- function(new.jobs, pool.resource) {
resources.needed <- new.jobs * rnorm(1, (pool.resource/(2400/365)), (pool.resource/(2400/365)))
return(resources.needed)
}
rand()
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
job.resource.matrix <- NA
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
job.resource.matrix <- matrix(nrow=3300, ncol=4)
job.resource.matrix <- 0
job.resource.matrix <- matrix(data=0,nrow=3300, ncol=4)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.matrix)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.matrix)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.matrix)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.matrix)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.matrix)
?head
head(job.resource.matrix,20)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.matrix,20)
jobs.new
sum(job.resource.matrix[,3])
job.resource.matrix <- matrix(data=0,nrow=3300, ncol=4)
colnames(job.resource.matrix) <- c("state.index", "jobs", "resources.allocated", "latency")
?as.numeric
resource.pool[1] <- 1000000
gain.rate <- 1.057
resource.fun <- function(new.jobs, pool.resource) {
resources.needed <- rnorm(1, (pool.resource/300), (pool.resource/2400)/50)
return(resources.needed)
}
job.resource.matrix <- matrix(data=0,nrow=3300, ncol=4)
colnames(job.resource.matrix) <- c("state.index", "jobs", "resources.allocated", "latency")
jobs.online <- 0
jobs.resources <- 0
jobs.skipped <- 0
jobs.total <- 0
jobs.current <- 0
resources.unused[1] <- resource.pool
for (i in 1:365) {
resources.today <- 0
jobs.new <- rpois(1, (2400/365))
jobs.total <- jobs.total + jobs.new
new.indices <- (1:jobs.new) + jobs.current
for (j in new.indices[1]:length(new.indices)) {
job.resource.matrix[j,1] <- as.numeric(i)
job.resource.matrix[j,2] <- paste("J",j)
job.resource.matrix[j,3] <- as.numeric(resource.fun(jobs.new, resource.pool))
latency.rand <- runif(1)
job.resource.matrix[j,4] <- as.numeric(latency.dist[which(abs(latency.dist$prob - latency.rand) == min(abs(latency.dist$prob - latency.rand))),1])
}}
head(job.resource.matrix)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.matrix)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.matrix, 25)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.frame)
sum(job.resource.frame$resources.allocated)
max(job.resource.frame$state.index)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.frame, 20)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.frame, 20)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.frame, 20)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
latency.dist <- read.csv("//fileserver/Company/DA&DS/R Information/Drew R Playground/latency.dist.csv")
View(latency.dist)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.frame, 20)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.frame, 20)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.frame, 20)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.frame, 20)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
sum(job.resource.frame$resources.allocated[new.indices])
new.indices
head(job.resource.frame)
head(job.resource.frame, 20)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.frame, 90:104)
head(job.resource.frame, 104)
new.indices[1]
length(new.indices)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.frame, 104)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
rm(resources.unused)
max(job.resource.frame$state.index)
write.table(job.resource.frame, "\\\\fileserver/Company/DA&DS/R Information/Drew R Playground/job.resource.data.csv", row.names=FALSE)
write.table(job.resource.frame, "\\\\fileserver/Company/DA&DS/R Information/Drew R Playground/job.resource.data.csv", row.names=FALSE, sep=",")
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
write.table(job.resource.frame, "\\\\fileserver/Company/DA&DS/R Information/Drew R Playground/job.resource.data.csv", row.names=FALSE, sep=",")
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
head(job.resource.frame,25)
head(job.resource.frame,-25)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
sum(job.resource.frame$resources.allocated)
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
resources.unused
write.table(job.resource.frame, "\\\\fileserver/Company/DA&DS/R Information/Drew R Playground/job.resource.data.csv", row.names=FALSE, sep=",")
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
resources.unused
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
resources.unused
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
resources.unused
write.table(job.resource.frame, "\\\\fileserver/Company/DA&DS/R Information/Drew R Playground/job.resource.data.csv", row.names=FALSE, sep=",")
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
resources.unused
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
ALPHA.error <- jobs.skipped
ALPHA.error
BETA.error
print(c(ALPHA.error, BETA.error))
UNIFORMITY.error <- sd(job.resource.frame$resources.allocated[where(job.resource.frame$resources.allocated > 0)])
?which
UNIFORMITY.error <- sd(job.resource.frame$resources.allocated[which(job.resource.frame$resources.allocated > 0)])
UNIFORMITY.error
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
mean(job.resource.frame$resources.allocated)
mean(job.resource.frame$resources.allocated[which(job.resource.frame$resources.allocated > 0)])
job.resource.frame$resources.allocated[which(job.resource.frame$resources.allocated > 0)]
plot(latency.dist)
print(matrix(c("ALPHA.error", "BETA.error", "UNIFORMITY",ALPHA.error, BETA.error, UNIFORMITY),nrow=2))
UNIFORMITY <- sd(job.resource.frame$resources.allocated[which(job.resource.frame$resources.allocated > 0)])
print(matrix(c("ALPHA.error", "BETA.error", "UNIFORMITY",ALPHA.error, BETA.error, UNIFORMITY),nrow=2))
print(matrix(c("ALPHA.error", "BETA.error", "UNIFORMITY",ALPHA.error, BETA.error, UNIFORMITY),nrow=3))
source('//fileserver/Company/DA&DS/R Information/Drew R Playground/jobs.resources.R')
