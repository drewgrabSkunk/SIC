{
    "contents" : "#ADX and TR Formulations#\n\ntech.transform.lag.fun <- function(URL, ticker, adxlag) {\n  output.file <-\n    paste(\n      \"\\\\\\\\fileserver/Company/DA&DS/R Information/Drew R Playground/Yahoo Files/\",ticker,\"-\",adxlag,\".csv\", sep =\n        \"\"\n    )\n  if (file.exists(output.file)) {\n    file.remove(output.file)\n  }\n  \n  tech <- read.csv(file = URL)\n  tech$Date <- as.POSIXct(tech$Date)\n  tech <- tech[order(tech$Date),]\n  tech$ticker <- ticker\n  \n  #Next 1, 7, 30 Day Gain#\n  tech$next.gain <- NA\n  for (i in 1:(length(tech$Close) - 1)) {\n    tech$next.gain[i] <- tech$Close[i + 1] - tech$Open[i+1]\n    tech$next.gain.per[i] <- tech$next.gain[i] / tech$Open[i+1]\n  }\n  \n  \n  tech$next.gain.7 <- NA\n  for (i in 1:(length(tech$Close) - 6)) {\n    tech$next.gain.7[i] <- tech$Close[i + 7] - tech$Open[i+1]\n    tech$next.gain.7.per[i] <- tech$next.gain.7[i] / tech$Open[i+1]\n  }\n  \n  \n  tech$next.gain.30 <- NA\n  for (i in 1:(length(tech$Close) - 29)) {\n    tech$next.gain.30[i] <- tech$Close[i + 30] - tech$Open[i+1]\n    tech$next.gain.30.per[i] <- tech$next.gain.30[i] / tech$Open[i+1]\n  }\n  \n  \n  #Calculate High-Low, High-prevClose, and Low-prevClose#\n  tech$hilo <- tech$High - tech$Low\n  tech$loclose[1] <- NA\n  tech$hiclose[1] <- NA\n  for (i in 2:length(tech$Close)) {\n    tech$loclose[i] <- abs(tech$Low[i] - tech$Close[i - 1])\n  }\n  for (i in 2:length(tech$Close)) {\n    tech$hiclose[i] <- abs(tech$High[i] - tech$Close[i - 1])\n  }\n  \n  #TR Calculation: Max of three calculations above#\n  tech$tr[1] <- NA\n  for (i in 2:length(tech$Close)) {\n    tech$tr[i] <-\n      max(tech$hilo[i], tech$hiclose[i], tech$loclose[i], na.rm = TRUE)\n  }\n  \n  #ATR - 10 day moving average of TR#\n  tech$atr[1] <- NA\n  tech$atr[2:10] <- NA\n  for (i in 11:length(tech$Close)) {\n    tech$atr[i] <- mean(tech$tr[(i - 9):i])\n  }\n  \n  #+DM 1 Calculation#\n  tech$hidiff.1[1] <- NA\n  tech$lodiff.1[1] <- NA\n  tech$p.DM.1[1] <- NA\n  \n  for (i in 2:length(tech$Close)) {\n    tech$hidiff.1[i] <- tech$High[i] - tech$High[i - 1]\n  }\n  for (i in 2:length(tech$Close)) {\n    tech$lodiff.1[i] <- tech$Low[i - 1] - tech$Low[i]\n  }\n  \n  for (i in 2:length(tech$Close)) {\n    if (tech$hidiff.1[i] > tech$lodiff.1[i]) {\n      tech$p.DM.1[i] <- max(tech$hidiff.1[i],0)\n    } else {\n      tech$p.DM.1[i] <- 0\n    }\n  }\n  \n  #-DM 1 Calculation#\n  tech$n.DM.1[1] <- NA\n  for (i in 2:length(tech$Close)) {\n    if (tech$lodiff.1[i] > tech$hidiff.1[i]) {\n      tech$n.DM.1[i] <- max(tech$lodiff.1[i],0)\n    } else {\n      tech$n.DM.1[i] <- 0\n    }\n  }\n  \n  #TR14 Calculation#\n  tech$tr.14[1] <- NA\n  tech$tr.14[1:14] <- c(rep(NA,14))\n  tech$tr.14[15] <- sum(tech$tr[2:15],na.rm = TRUE)\n  for (i in 16:length(tech$Close)) {\n    tech$tr.14[i] <-\n      (tech$tr.14[i - 1] - (tech$tr.14[i - 1] / 14) + tech$tr[i])\n  }\n  \n  #+DM 14 Calculation#\n  tech$p.DM.14[1] <- NA\n  tech$p.DM.14[1:14] <- c(rep(NA,14))\n  tech$p.DM.14[15] <- sum(tech$p.DM.1[2:15],na.rm = TRUE)\n  for (i in 16:length(tech$Close)) {\n    tech$p.DM.14[i] <-\n      (tech$p.DM.14[i - 1] - (tech$p.DM.14[i - 1] / 14) + tech$p.DM.1[i])\n  }\n  \n  #-DM 14 Calculation#\n  tech$n.DM.14[1] <- NA\n  tech$n.DM.14[1:14] <- c(rep(NA,14))\n  tech$n.DM.14[15] <- sum(tech$n.DM.1[2:15],na.rm = TRUE)\n  for (i in 16:length(tech$Close)) {\n    tech$n.DM.14[i] <-\n      (tech$n.DM.14[i - 1] - (tech$n.DM.14[i - 1] / 14) + tech$n.DM.1[i])\n  }\n  \n  #+DI 14 Calculation#\n  tech$p.DI.14[1] <- NA\n  tech$p.DI.14[1:14] <- c(rep(NA,14))\n  for (i in 15:length(tech$Close)) {\n    tech$p.DI.14[i] <- (100 * (tech$p.DM.14[i] / tech$tr.14[i]))\n  }\n  \n  #-DI 14 Calculation#\n  tech$n.DI.14[1] <- NA\n  tech$n.DI.14[1:14] <- c(rep(NA,14))\n  for (i in 15:length(tech$Close)) {\n    tech$n.DI.14[i] <- (100 * (tech$n.DM.14[i] / tech$tr.14[i]))\n  }\n  \n  #DI 14 Diff Calculation#\n  tech$diff.DI.14[1] <- NA\n  tech$diff.DI.14[1:14] <- c(rep(NA,14))\n  for (i in 15:length(tech$Close)) {\n    tech$diff.DI.14[i] <- abs(tech$p.DI.14[i] - tech$n.DI.14[i])\n  }\n  \n  #DI 14 Sum Calculation#\n  tech$sum.DI.14[1] <- NA\n  tech$sum.DI.14[1:14] <- c(rep(NA,14))\n  for (i in 15:length(tech$Close)) {\n    tech$sum.DI.14[i] <- tech$p.DI.14[i] + tech$n.DI.14[i]\n  }\n  \n  #DX Calculation#\n  tech$DX[1] <- NA\n  tech$DX[1:14] <- c(rep(NA,14))\n  for (i in 15:length(tech$Close)) {\n    tech$DX[i] <- (100 * (tech$diff.DI.14[i] / tech$sum.DI.14[i]))\n  }\n  \n  #ADX Calculation#\n  tech$ADX[1] <- NA\n  tech$ADX[1:27] <- c(rep(NA,27))\n  tech$ADX[28] <- mean(tech$DX[15:28])\n  for (i in 29:length(tech$Close)) {\n    tech$ADX[i] <- (((tech$ADX[i - 1] * 13) + tech$DX[i]) / 14)\n  }\n  \n  #20 Day Moving Average#\n  require(zoo)\n  \n  tech$MA.20[1] <- NA\n  tech$MA.20[1:19] <- c(rep(NA,19))\n  tech$MA.20[20:length(tech$Close)] <-\n    rollmean(tech$Close, 20)\n  \n  #20 Day Moving STD#\n  tech$STD.20[1] <- NA\n  tech$STD.20[1:19] <- c(rep(NA,19))\n  for (i in 20:length(tech$Close)) {\n    tech$STD.20[i] <- sd(tech$Close[(i - 19):i]) * (sqrt(19 / 20))\n  }\n  \n  #Bollinger Bands(20,2)#\n  tech$up.Bol <- tech$MA.20 + (2 * tech$STD.20)\n  tech$down.Bol <- tech$MA.20 - (2 * tech$STD.20)\n  tech$Bollinger <- tech$up.Bol - tech$down.Bol\n  \n  #A-D Line#\n  tech$MF.Mult <-\n    ((tech$Close - tech$Low) - (tech$High - tech$Close)) / (tech$High - tech$Low)\n  \n  tech$MF.Value <- tech$MF.Mult * tech$Volume\n  \n  tech$ADLine[1] <- tech$MF.Value[1]\n  for (i in 20:length(tech$Close)) {\n    tech$ADLine[i] <- (tech$ADLine[i - 1] + tech$MF.Value[i])\n  }\n  \n  #CCI 20-Day#\n  require(lsr)\n  \n  tech$Typical.Price <-\n    (tech$High + tech$Low + tech$Close) / 3\n  \n  tech$SMA.20[1] <- NA\n  tech$SMA.20[1:19] <- c(rep(NA,19))\n  tech$SMA.20[20:length(tech$Close)] <-\n    rollmean(tech$Typical.Price, 20)\n  \n  tech$MAD.20[1] <- NA\n  tech$MAD.20[1:19] <- c(rep(NA,19))\n  for (i in 20:length(tech$Close)) {\n    tech$MAD.20[i] <- aad(tech$Typical.Price[(i - 19):i])\n  }\n  \n  tech$CCI.20 <-\n    (tech$Typical.Price - tech$SMA.20) / (.015 * tech$MAD.20)\n  \n  #CMF 20-Day#\n  tech$CMF.20[1] <- NA\n  tech$CMF.20[1:19] <- c(rep(NA,19))\n  tech$CMF.20[20:length(tech$Close)] <-\n    rollmean(tech$MF.Value, 20) / rollmean(tech$Volume, 20)\n  \n  #OBV Calculation#\n  tech$OBV[1] <- 0\n  for (i in 2:length(tech$Close)) {\n    if (tech$Close[i] > tech$Close[i - 1]) {\n      tech$OBV[i] <- (tech$OBV[i - 1] + tech$Volume[i])\n    }\n    if (tech$Close[i] < tech$Close[i - 1]) {\n      tech$OBV[i] <- (tech$OBV[i - 1] - tech$Volume[i])\n    }\n    else {\n      tech$OBV[i] <- tech$OBV[i - 1]\n    }\n  }\n  \n  #Money Flow Index#\n  tech$updown[1] <- NA\n  for (i in 2:length(tech$Close)) {\n    if (tech$Typical.Price[i] > tech$Typical.Price[i - 1]) {\n      tech$updown[i] <- 1\n    }\n    else {\n      tech$updown[i] <- -1\n    }\n  }\n  \n  tech$Raw.Flow <- tech$Typical.Price * tech$Volume\n  \n  tech$Pos.Flow.1[1] <- NA\n  for (i in 2:length(tech$Close)) {\n    if (tech$updown[i] > 0) {\n      tech$Pos.Flow.1[i] <- tech$Raw.Flow[i]\n    }\n    else {\n      tech$Pos.Flow.1[i] <- 0\n    }\n  }\n  \n  tech$Neg.Flow.1[1] <- NA\n  for (i in 2:length(tech$Close)) {\n    if (tech$updown[i] < 0) {\n      tech$Neg.Flow.1[i] <- tech$Raw.Flow[i]\n    }\n    else {\n      tech$Neg.Flow.1[i] <- 0\n    }\n  }\n  \n  tech$Pos.Flow.14[1] <- NA\n  tech$Pos.Flow.14[2:14] <- NA\n  for (i in 15:length(tech$Close)) {\n    tech$Pos.Flow.14[i] <- sum(tech$Pos.Flow.1[(i - 13):i])\n  }\n  \n  tech$Neg.Flow.14[1] <- NA\n  tech$Neg.Flow.14[2:14] <- NA\n  for (i in 15:length(tech$Close)) {\n    tech$Neg.Flow.14[i] <- sum(tech$Neg.Flow.1[(i - 13):i])\n  }\n  \n  tech$Ratio.Flow.14 <- tech$Pos.Flow.14 / tech$Neg.Flow.14\n  \n  tech$Index.Flow.14 <- (100 - (100 / (1 + tech$Ratio.Flow.14)))\n  \n  #Stochastic Oscillator 14-Day#\n  tech$hi.14[1] <- NA\n  tech$hi.14[2:13] <- NA\n  for (i in 14:length(tech$Close)) {\n    tech$hi.14[i] <- max(tech$High[(i - 13):i])\n  }\n  \n  tech$lo.14[1] <- NA\n  tech$lo.14[2:13] <- NA\n  for (i in 14:length(tech$Close)) {\n    tech$lo.14[i] <- min(tech$Low[(i - 13):i])\n  }\n  \n  tech$lo.14[1] <- NA\n  tech$lo.14[2:13] <- NA\n  tech$Osc.14 <-\n    ((tech$Close - tech$lo.14) / (tech$hi.14 - tech$lo.14)) * 100\n  \n  #Williams %R 14-Day#\n  tech$Will.14 <-\n    ((tech$hi.14 - tech$Close) / (tech$hi.14 - tech$lo.14)) * (-100)\n  \n  #EMA 12, 20, 26 Day#\n  tech$EMA.9[1] <- NA\n  tech$EMA.9[2:8] <- NA\n  tech$EMA.9[9] <- mean(tech$Close[1:9])\n  for (i in 10:length(tech$Close)) {\n    tech$EMA.9[i] <-\n      (((2 / 10) * (tech$Close[i] - tech$EMA.9[i - 1])) + tech$EMA.9[(i-1)])\n  }\n  \n  tech$EMA.12[1] <- NA\n  tech$EMA.12[2:11] <- NA\n  tech$EMA.12[12] <- mean(tech$Close[1:12])\n  for (i in 13:length(tech$Close)) {\n    tech$EMA.12[i] <-\n      (((2 / 13) * (tech$Close[i] - tech$EMA.12[i - 1])) + tech$EMA.12[(i-1)])\n  }\n  \n  tech$EMA.20[1] <- NA\n  tech$EMA.20[2:19] <- NA\n  tech$EMA.20[20] <- mean(tech$Close[1:20])\n  for (i in 21:length(tech$Close)) {\n    tech$EMA.20[i] <-\n      (((2 / 21) * (tech$Close[i] - tech$EMA.20[i - 1])) + tech$EMA.20[(i-1)])\n  }\n  \n  tech$EMA.26[1] <- NA\n  tech$EMA.26[2:25] <- NA\n  tech$EMA.26[26] <- mean(tech$Close[1:26])\n  for (i in 27:length(tech$Close)) {\n    tech$EMA.26[i] <-\n      (((2 / 27) * (tech$Close[i] - tech$EMA.26[i - 1])) + tech$EMA.26[(i-1)])\n  }\n  \n  #KC Bands#\n  tech$kc.upper <- (tech$EMA.20 + (2 * tech$atr))\n  tech$kc.lower <- (tech$EMA.20 - (2 * tech$atr))\n  tech$kc.width <- tech$kc.upper - tech$kc.lower\n  \n  #Bollinger/Keltner Comparison#\n  tech$bb.kc[1] <- NA\n  tech$bb.kc[2:20] <- NA\n  for (i in 21:length(tech$Close)) {\n    if ((tech$up.Bol[i] < tech$kc.upper[i]) &\n        (tech$down.Bol[i] > tech$kc.lower[i])) {\n      tech$bb.kc[i] <- 1\n    }\n    else {\n      tech$bb.kc[i] <- 0\n    }\n  }\n  \n  \n  #CCI Cross 100 Up#\n  tech$CCI.cross.up[1] <- NA\n  tech$CCI.cross.up[2:20] <- NA\n  for (i in 21:length(tech$Close)) {\n    if ((tech$CCI.20[i] > 100) &\n        (tech$CCI.20[i - 1] < 100)) {\n      tech$CCI.cross.up[i] <- 1\n    }\n    else {\n      tech$CCI.cross.up[i] <- 0\n    }\n  }\n  \n  #CCI Cross 100 Down#\n  tech$CCI.cross.down[1] <- NA\n  tech$CCI.cross.down[2:20] <- NA\n  for (i in 21:length(tech$Close)) {\n    if ((tech$CCI.20[i] < 100) &\n        (tech$CCI.20[i - 1] > 100)) {\n      tech$CCI.cross.down[i] <- 1\n    }\n    else {\n      tech$CCI.cross.down[i] <- 0\n    }\n  }\n  \n  #CCI Cross 0 Down#\n  tech$CCI.cross.0.down[1] <- NA\n  tech$CCI.cross.0.down[2:20] <- NA\n  for (i in 21:length(tech$Close)) {\n    if ((tech$CCI.20[i] < 0) &\n        (tech$CCI.20[i - 1] > 0)) {\n      tech$CCI.cross.0.down[i] <- 1\n    }\n    else {\n      tech$CCI.cross.0.down[i] <- 0\n    }\n  }\n  \n  #CCI Above#\n  tech$CCI.above[1] <- NA\n  tech$CCI.above[2:20] <- NA\n  for (i in 21:length(tech$Close)) {\n    if (tech$CCI.20[i] > 100) {\n      tech$CCI.above[i] <- 1\n    }\n    else {\n      tech$CCI.above[i] <- 0\n    }\n  }\n  \n  \n  #DI Cross#\n  tech$DI.cross[1] <- NA\n  tech$DI.cross[2:15] <- NA\n  for (i in 16:length(tech$Close)) {\n    if ((tech$p.DI.14[i] > tech$n.DI.14[i]) &\n        (tech$p.DI.14[(i - 1)] < tech$n.DI.14[(i - 1)])) {\n      tech$DI.cross[i] <- 1\n    }\n    else {\n      tech$DI.cross[i] <- 0\n    }\n  }\n  \n  #DI Above#\n  tech$DI.above[1] <- NA\n  tech$DI.above[2:15] <- NA\n  for (i in 16:length(tech$Close)) {\n    if (tech$p.DI.14[i] > tech$n.DI.14[i]) {\n      tech$DI.above[i] <- 1\n    }\n    else {\n      tech$DI.above[i] <- 0\n    }\n  }\n  \n  \n  #MACD 14 Calculation#\n  tech$MACD[1] <- NA\n  tech$MACD[2:25] <- NA\n  for (i in 26:length(tech$Close)) {tech$MACD[i] <- tech$EMA.12[i] - tech$EMA.26[i]}\n  \n  \n  #MACD 17 Calculation#\n  tech$MACD.17[1] <- NA\n  tech$MACD.17[2:25] <- NA\n  for (i in 26:length(tech$Close)) {tech$MACD.17[i] <- tech$EMA.9[i] - tech$EMA.26[i]}\n  \n  #MACD 14 Signal#\n  tech$MACD.signal[1] <- NA\n  tech$MACD.signal[2:33] <- NA\n  tech$MACD.signal[34] <- mean(tech$MACD[26:34])\n  for (i in 35:length(tech$Close)) {\n    tech$MACD.signal[i] <-\n      (((2 / 27) * (tech$MACD[i] - tech$MACD.signal[i - 1])) + tech$MACD.signal[(i-1)])\n  }\n  \n  #MACD 17 Signal#\n  tech$MACD.17.signal[1] <- NA\n  tech$MACD.17.signal[2:33] <- NA\n  tech$MACD.17.signal[34] <- mean(tech$MACD.17[26:34])\n  for (i in 35:length(tech$Close)) {\n    tech$MACD.17.signal[i] <-\n      (((2 / 27) * (tech$MACD.17[i] - tech$MACD.17.signal[i - 1])) + tech$MACD.17.signal[(i-1)])\n  }\n  \n  #MA 14 Cross Down#\n  tech$MA.cross.down[1] <- NA\n  tech$MA.cross.down[2:34] <- NA\n  for (i in 35:length(tech$Close)) {\n    if ((tech$MACD[i] > tech$MACD.signal[i]) &\n        (tech$MACD[(i - 1)] < tech$MACD.signal[(i - 1)])) {\n      tech$MA.cross.down[i] <- 1\n    }\n    else {\n      tech$MA.cross.down[i] <- 0\n    }\n  }\n  \n  #MA 14 Cross Up#\n  tech$MA.cross.up[1] <- NA\n  tech$MA.cross.up[2:34] <- NA\n  for (i in 35:length(tech$Close)) {\n    if ((tech$MACD[i] < tech$MACD.signal[i]) &\n        (tech$MACD[(i - 1)] > tech$MACD.signal[(i - 1)])) {\n      tech$MA.cross.up[i] <- 1\n    }\n    else {\n      tech$MA.cross.up[i] <- 0\n    }\n  }\n  \n  #MA 17 Cross Down#\n  tech$MA.17.cross.down[1] <- NA\n  tech$MA.17.cross.down[2:34] <- NA\n  for (i in 35:length(tech$Close)) {\n    if ((tech$MACD.17[i] > tech$MACD.17.signal[i]) &\n        (tech$MACD.17[(i - 1)] < tech$MACD.17.signal[(i - 1)])) {\n      tech$MA.17.cross.down[i] <- 1\n    }\n    else {\n      tech$MA.17.cross.down[i] <- 0\n    }\n  }\n  \n  #MA 17 Cross Up#\n  tech$MA.17.cross.up[1] <- NA\n  tech$MA.17.cross.up[2:34] <- NA\n  for (i in 35:length(tech$Close)) {\n    if ((tech$MACD.17[i] < tech$MACD.17.signal[i]) &\n        (tech$MACD.17[(i - 1)] > tech$MACD.17.signal[(i - 1)])) {\n      tech$MA.17.cross.up[i] <- 1\n    }\n    else {\n      tech$MA.17.cross.up[i] <- 0\n    }\n  }\n  \n  #MA 14 Above#\n  tech$MA.above[1] <- NA\n  tech$MA.above[2:34] <- NA\n  for (i in 35:length(tech$Close)) {\n    if (tech$MACD[i] > tech$MACD.signal[i]) {\n      tech$MA.above[i] <- 1\n    }\n    else {\n      tech$MA.above[i] <- 0\n    }\n  }\n  \n  \n  #CCI, DI, MA Cross 3#\n  tech$CCI.cross.3[1] <- NA\n  tech$CCI.cross.3[2:22] <- NA\n  for ( i in 23:length(tech$Close)) {\n    tech$CCI.cross.3[i] <- tech$CCI.cross.up[i] + tech$CCI.cross.up[i-1] + tech$CCI.cross.up[i-2]}\n  \n  tech$DI.cross.3[1] <- NA\n  tech$DI.cross.3[2:22] <- NA\n  for ( i in 23:length(tech$Close)) {\n    tech$DI.cross.3[i] <- tech$DI.cross[i] + tech$DI.cross[i-1] + tech$DI.cross[i-2]}\n  \n  tech$MA.cross.3[1] <- NA\n  tech$MA.cross.3[2:22] <- NA\n  for ( i in 23:length(tech$Close)) {\n    tech$MA.cross.3[i] <- tech$MA.cross.up[i] + tech$MA.cross.up[i-1] + tech$MA.cross.up[i-2]}\n  \n  #Price KC#\n  tech$price.kc[1] <- NA\n  tech$price.kc[2:19] <- NA\n  for (i in 20:length(tech$Close)) {\n    if (tech$Close[i] > tech$kc.upper[i]) {tech$price.kc[i] <- 1} \n    else {tech$price.kc[i] <- 0}\n  }\n  \n  #Buy Triple Cross 3#\n  tech$buy.three.cross[1] <- NA\n  tech$buy.three.cross[2:36] <- NA\n  for (i in 37:length(tech$Close)) {\n    if((tech$bb.kc[i] == 1) & (tech$CCI.cross.3[i] == 1) & (tech$DI.cross.3[i] == 1) & (tech$MA.cross.3[i] == 1) \n       & (!is.na(tech$ADX[i-adxlag])) & (tech$ADX[i] - tech$ADX[i-adxlag] > 0)\n       ) {\n      tech$buy.three.cross[i] <- 1}\n    else { tech$buy.three.cross[i] <- 0}\n  }\n  \n  #Buy Roll DI Cross 3 (DI Roll = 6 Days)#\n  tech$buy.roll.DI[1] <- NA\n  tech$buy.roll.DI[2:36] <- NA\n  for (i in 37:length(tech$Close)) {\n    if((tech$bb.kc[i] == 1) & (tech$CCI.cross.3[i] == 1) & (tech$MA.cross.3[i] == 1) & (tech$DI.cross.3[i] == 1)\n       & (tech$DI.cross.3[i-1] == 1) & (tech$DI.cross.3[i-2] == 1) & (tech$DI.cross.3[i-3] == 1)\n       & (tech$DI.cross.3[i-4] == 1) & (tech$DI.cross.3[i-5] == 1)\n       & (!is.na(tech$ADX[i-adxlag])) & (tech$ADX[i] - tech$ADX[i-adxlag] > 0)\n       ) {\n      tech$buy.roll.DI[i] <- 1}\n    else { tech$buy.roll.DI[i] <- 0}\n  }\n  \n  #Buy MA Above#\n  tech$buy.MA.above[1] <- NA\n  tech$buy.MA.above[2:36] <- NA\n  for (i in 37:length(tech$Close)) {\n    if((tech$price.kc[i] == 1) & (tech$CCI.cross.3[i] == 1) & (tech$MA.above[i] == 1) & (tech$DI.cross.3[i] == 1)\n       & (!is.na(tech$ADX[i-adxlag])) & (tech$ADX[i] - tech$ADX[i-adxlag] > 0)\n       ) {\n      tech$buy.MA.above[i] <- 1}\n    else { tech$buy.MA.above[i] <- 0}\n  }\n  \n  #Buy Triple Above#\n  tech$buy.triple.above[1] <- NA\n  tech$buy.triple.above[2:36] <- NA\n  for (i in 37:length(tech$Close)) {\n    if((tech$bb.kc[i] == 1) & (tech$CCI.above[i] == 1) & (tech$MA.above[i] == 1) & (tech$DI.above[i] == 1)\n       & (!is.na(tech$ADX[i-adxlag])) & (tech$ADX[i] - tech$ADX[i-adxlag] > 0)\n       ) {\n      tech$buy.triple.above[i] <- 1}\n    else { tech$buy.triple.above[i] <- 0}\n  }\n  \n  #Buy Triple Above Modified#\n  tech$buy.triple.mod[1] <- NA\n  tech$buy.triple.mod[2:39] <- NA\n  for (i in 40:length(tech$Close)) {\n    if((tech$buy.triple.above[i] == 1) & (tech$CCI.above[i-1] == 1) & (tech$CCI.above[i-2] == 1) & (tech$CCI.above[i-3] == 1)\n       & (!is.na(tech$ADX[i-adxlag])) & (tech$ADX[i] - tech$ADX[i-adxlag] > 0)\n       ) {\n      tech$buy.triple.mod[i] <- 1}\n    else { tech$buy.triple.mod[i] <- 0}\n  }\n  \n  #Sell on Cross Down#\n  tech$sell.cross.down[1] <- NA\n  tech$sell.cross.down[2:39] <- NA\n  for (i in 40:length(tech$Close)) {\n    if(((tech$MA.17.cross.down[i] == 1) || (tech$MA.17.cross.down[i-1] == 1) || (tech$MA.17.cross.down[i-2] == 1) || (tech$MA.17.cross.down[i-3] == 1) || (tech$MA.17.cross.down[i-4] == 1))\n       & ((tech$bb.kc[i] == 1 || tech$bb.kc[i-1] == 1 || tech$bb.kc[i-2] == 1 || tech$bb.kc[i-3] == 1 || tech$bb.kc[i-4] == 1))\n       & ( (tech$CCI.cross.down[i] == 1) ||  (tech$CCI.cross.down[i-1] == 1)   ||  (tech$CCI.cross.down[i-2] == 1) ||  (tech$CCI.cross.down[i-3] == 1) ||  (tech$CCI.cross.down[i-4] == 1)\n           ||  (tech$CCI.cross.0.down[i] == 1) || (tech$CCI.cross.0.down[i-1] == 1) || (tech$CCI.cross.0.down[i-2] == 1) || (tech$CCI.cross.0.down[i-3] == 1) || (tech$CCI.cross.0.down[i-4] == 1))) {\n      tech$sell.cross.down[i] <- 1}\n    else { tech$sell.cross.down[i] <- 0}\n  }\n  \n  #Independent Sell Signals#\n  tech$sell.MA.cross.down[1] <- NA\n  tech$sell.MA.cross.down[2:39] <- NA\n  for (i in 40:length(tech$Close)) {\n    if((tech$MA.17.cross.down[i] == 1) || (tech$MA.17.cross.down[i-1] == 1) || (tech$MA.17.cross.down[i-2] == 1) || (tech$MA.17.cross.down[i-3] == 1) || (tech$MA.17.cross.down[i-4] == 1)) {\n      tech$sell.MA.cross.down[i] <- 1}\n    else { tech$sell.MA.cross.down[i] <- 0}\n  }\n  \n  tech$sell.bb.kc[1] <- NA\n  tech$sell.bb.kc[2:39] <- NA\n  for (i in 40:length(tech$Close)) {\n    if((tech$bb.kc[i] == 1 || tech$bb.kc[i-1] == 1 || tech$bb.kc[i-2] == 1 || tech$bb.kc[i-3] == 1 || tech$bb.kc[i-4] == 1)) {\n      tech$sell.bb.kc[i] <- 1}\n    else { tech$sell.bb.kc[i] <- 0}\n  }\n  \n  tech$sell.CCI.cross.down[1] <- NA\n  tech$sell.CCI.cross.down[2:39] <- NA\n  for (i in 40:length(tech$Close)) {\n    if((tech$CCI.cross.down[i] == 1) ||  (tech$CCI.cross.down[i-1] == 1)   ||  (tech$CCI.cross.down[i-2] == 1) ||  (tech$CCI.cross.down[i-3] == 1) ||  (tech$CCI.cross.down[i-4] == 1)\n       ||  (tech$CCI.cross.0.down[i] == 1) || (tech$CCI.cross.0.down[i-1] == 1) || (tech$CCI.cross.0.down[i-2] == 1) || (tech$CCI.cross.0.down[i-3] == 1) || (tech$CCI.cross.0.down[i-4] == 1)) {\n      tech$sell.CCI.cross.down[i] <- 1}\n    else { tech$sell.CCI.cross.down[i] <- 0}\n  }\n  \n  #Holding Gain on Next Sell Cross Down#\n  tech$holding.gain.sell.1[1] <- NA\n  tech$holding.gain.sell.1[2:39] <- NA\n  tech$holding.gain.sell.per[1] <- NA\n  tech$holding.gain.sell.per[2:39] <- NA\n  for( i in 40:length(tech$Close)) {\n    if((tech$buy.three.cross[i] == 0) & (tech$buy.roll.DI[i] == 0) & (tech$buy.MA.above[i] == 0) & (tech$buy.triple.above[i] == 0) & (tech$buy.triple.mod[i] == 0)) {\n      tech$holding.gain.sell.1[i] <- 0\n    }\n    \n    else if(1 %in% tech$sell.cross.down[i:length(tech$Close)]) {\n      tech$holding.gain.sell.1[i] <- tech$Open[(min(which(tech$sell.cross.down[i:length(tech$Close)] == 1)) + i)] - tech$Open[i+1]\n      tech$holding.gain.sell.per[i] <- tech$holding.gain.sell.1[i]/tech$Open[i+1]\n    }\n    \n    else {tech$holding.gain.sell.1[i] <- NA}\n  }\n  \n  write.csv(tech, output.file, row.names = FALSE)\n  \n  return(tech)\n  \n}\n",
    "created" : 1444844944735.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3465120597",
    "id" : "E27CCE3F",
    "lastKnownWriteTime" : 1444845266,
    "path" : "//fileserver/Company/DA&DS/R Information/Drew R Playground/tech.transform.lag.R",
    "project_path" : "tech.transform.lag.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : true,
    "type" : "r_source"
}